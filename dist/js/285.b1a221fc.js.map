{"version":3,"file":"js/285.b1a221fc.js","mappings":"iyEAgIE,EAAe,CACbA,KAAM,SACNC,MAAO,CACLC,IAAKC,QAEPC,QAAS,WACLC,KAAKC,WAAU,WAGXC,OAAOC,8BAGfC,QAAS,aACTC,OACI,MAAO,CACHC,KAAM,kBACNC,YAAY,IAGpBC,QAAS,I,gCAnET,MAAMC,GAASC,EAAAA,EAAAA,MACTC,GAAQD,EAAAA,EAAAA,IAAI,IACZE,GAAWF,EAAAA,EAAAA,IAAI,IACfG,GAASC,EAAAA,EAAAA,MAETC,EAAS,KACXC,EAAAA,EAAAA,OAEKC,2BAA2BN,EAAMO,MAAON,EAASM,OACjDC,MAAMd,IACHe,QAAQC,IAAIhB,GACZe,QAAQC,IAAI,2BACZC,aAAaC,QAAQ,WAAY,QAEjCV,EAAOW,KAAK,QAEfC,OAAMC,IAEH,OADAN,QAAQC,IAAIK,EAAMC,MACVD,EAAMC,MACV,IAAK,qBACDlB,EAAOS,MAAQ,gBACf,MACJ,IAAK,sBACDT,EAAOS,MAAQ,uCACf,MACJ,IAAK,sBACDT,EAAOS,MAAQ,qBACf,MACJ,QACIT,EAAOS,MAAQ,kCACf,WAKdU,EAAkBC,IAEpB,MAAMC,GAAWC,EAAAA,EAAAA,IAAiBF,EAASG,YAC3CZ,QAAQC,IAAI,sBAAuBS,GACnCV,QAAQC,IAAI,2BACZC,aAAaC,QAAQ,WAAY,QAEjCV,EAAOW,KAAK,M,m6CCvHpB,MAAMS,EAAc,EAEpB,S","sources":["webpack://healthful-platform/./src/views/SignIn.vue","webpack://healthful-platform/./src/views/SignIn.vue?093c"],"sourcesContent":["<template>\n  <section class=\"sign-in-page\">\n    <div class=\"container sign-in-page-bg mt-5 p-0\">\n        <div class=\"row no-gutters\">\n            <div class=\"col-md-6 text-center\">\n                <div class=\"sign-in-detail text-white\">\n                    <a class=\"sign-in-logo mb-5\" href=\"#\"><img :src=\"require('@/assets/images/logos/healthful-logo-white.png')\" class=\"img-fluid\" alt=\"logo\"></a>\n                    <div class=\"owl-carousel\" data-autoplay=\"true\" data-loop=\"true\" data-nav=\"false\" data-dots=\"true\" data-items=\"1\" data-items-laptop=\"1\" data-items-tab=\"1\" data-items-mobile=\"1\" data-items-mobile-sm=\"1\" data-margin=\"0\">\n                        <div class=\"item\">\n                            <img :src=\"require('@/assets/images/login/1.svg')\" class=\"img-fluid mb-4\" alt=\"logo\">\n                            <h4 class=\"mb-1 text-white\">Manage your orders</h4>\n                            <p>It is a long established fact that a reader will be distracted by the readable content.</p>\n                        </div>\n                        <div class=\"item\">\n                            <img :src=\"require('@/assets/images/login/2.svg')\" class=\"img-fluid mb-4\" alt=\"logo\">\n                            <h4 class=\"mb-1 text-white\">Manage your orders</h4>\n                            <p>It is a long established fact that a reader will be distracted by the readable content.</p>\n                        </div>\n                        <div class=\"item\">\n                            <img :src=\"require('@/assets/images/login/3.svg')\" class=\"img-fluid mb-4\" alt=\"logo\">\n                            <h4 class=\"mb-1 text-white\">Manage your orders</h4>\n                            <p>It is a long established fact that a reader will be distracted by the readable content.</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-md-6 position-relative\">\n                <div class=\"sign-in-from\">\n                    <h1 class=\"mb-0\">Sign in</h1>\n                    <p>Enter your email address and password to access admin panel.</p>\n                    <div class=\"mt-4\">\n                        <div class=\"form-group\">\n                            <label for=\"exampleInputEmail1\">Email address</label>\n                            <input type=\"email\" class=\"form-control mb-0\" id=\"exampleInputEmail1\" placeholder=\"Enter email\" v-model=\"email\">\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"exampleInputPassword1\">Password</label>\n                            <a href=\"#\" class=\"float-right\">Forgot password?</a>\n                            <input type=\"password\" class=\"form-control mb-0\" id=\"exampleInputPassword1\" placeholder=\"Password\" v-model=\"password\">\n                        </div>\n                        <div class=\"d-inline-block w-100\">\n                            <div class=\"custom-control custom-checkbox d-inline-block mt-2 pt-1\">\n                                <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\">\n                                <label class=\"custom-control-label\" for=\"customCheck1\">Remember Me</label>\n                            </div>\n                            <button @click=\"signIn\" type=\"submit\" class=\"btn btn-primary float-right\">Sign in</button>\n                            <p v-if=\"errMsg\">{{ errMsg }}</p>\n                        </div>\n                        <div class=\"sign-info\">\n                            <span class=\"dark-color d-inline-block line-height-2\">\n                                Don't have an account? \n                                <router-link to=\"/sign-up\">Sign up</router-link>\n                            </span>                            \n                            <span class=\"dark-color d-inline-block line-height-2\">You can also Sign-in with your Google account?</span>\n                            \n                            <GoogleLogin :callback=\"googleCallback\" auto-login style=\"width: 100%; margin-top: 10px;\"/>\n                            <!--<button class=\"oauth-container btn darken-4 white black-text\" style=\"text-transform:none; width: 100%\">\n                                <div class=\"left\">\n                                    <img style=\"margin: 0px 10px; width: 15px;\" alt=\"Google Sign-in\" :src=\"require('@/assets/images/login/google-logo.png')\" />\n                                </div>\n                                Sign-in with Google\n                            </button>-->       \n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n  </section>\n  \n</template>\n\n<script setup>\n    import { ref } from 'vue'\n    import { useRouter } from 'vue-router'\n    import { decodeCredential } from 'vue3-google-login'\n\n    import firebase from 'firebase/compat/app'\n    import 'firebase/compat/auth';\n\n    const errMsg = ref()\n    const email = ref('')\n    const password = ref('')\n    const router = useRouter()\n\n    const signIn = () => { // we also renamed this method\n        firebase\n            .auth()\n            .signInWithEmailAndPassword(email.value, password.value) // THIS LINE CHANGED\n            .then((data) => {\n                console.log(data)\n                console.log('Successfully logged in!');\n                localStorage.setItem('isLogged', 'true');\n                // redirect to the dashboard\n                router.push('/') \n            })\n            .catch(error => {\n                console.log(error.code)\n                switch (error.code) {\n                    case 'auth/invalid-email':\n                        errMsg.value = 'Invalid email'\n                        break\n                    case 'auth/user-not-found':\n                        errMsg.value = 'No account with that email was found'\n                        break\n                    case 'auth/wrong-password':\n                        errMsg.value = 'Incorrect password'\n                        break\n                    default:\n                        errMsg.value = 'Email or password was incorrect'\n                        break\n                }\n            });\n    }\n    \n    const googleCallback = (response) => {\n        // decodeCredential will retrive the JWT payload from the credential\n        const userData = decodeCredential(response.credential)\n        console.log(\"Handle the userData\", userData)\n        console.log('Successfully logged in!');\n        localStorage.setItem('isLogged', 'true');\n        // redirect to the dashboard\n        router.push('/')\n    }\n</script>\n\n<script>\n\n  export default {\n    name: 'SignIn',\n    props: {\n      msg: String\n    },\n    mounted: function () {\n        this.$nextTick(function () {\n            // Code that will run only after the\n            // entire view has been rendered\n            window.performCustomOperations()\n        })\n    },\n    updated: function(){},\n    data(){\n        return {\n            user: 'Blank user name',\n            isSignedIn: false\n        }    \n    },\n    methods: {\n      \n    }\n  }\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n</style>\n","import script from \"./SignIn.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SignIn.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["name","props","msg","String","mounted","this","$nextTick","window","performCustomOperations","updated","data","user","isSignedIn","methods","errMsg","ref","email","password","router","useRouter","signIn","firebase","signInWithEmailAndPassword","value","then","console","log","localStorage","setItem","push","catch","error","code","googleCallback","response","userData","decodeCredential","credential","__exports__"],"sourceRoot":""}